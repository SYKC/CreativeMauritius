/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

eval("var FirepadUserList = (function() {\n    function FirepadUserList(ref, place, userId, displayName) {\n        if (!(this instanceof FirepadUserList)) {\n            return new FirepadUserList(ref, place, userId, displayName);\n        }\n\n        this.ref_ = ref;\n        this.userId_ = userId;\n        this.place_ = place;\n        this.firebaseCallbacks_ = [];\n\n        var self = this;\n        this.hasName_ = !!displayName;\n        this.displayName_ = displayName || 'Guest ' + Math.floor(Math.random() * 1000);\n        this.firebaseOn_(ref.root.child('.info/connected'), 'value', function(s) {\n            if (s.val() === true && self.displayName_) {\n                var nameRef = ref.child(self.userId_).child('name');\n                nameRef.onDisconnect().remove();\n                nameRef.set(self.displayName_);\n            }\n        });\n\n        this.userList_ = this.makeUserList_()\n        place.appendChild(this.userList_);\n    }\n\n    // This is the primary \"constructor\" for symmetry with Firepad.\n    FirepadUserList.fromDiv = FirepadUserList;\n\n    FirepadUserList.prototype.dispose = function() {\n        this.removeFirebaseCallbacks_();\n        this.ref_.child(this.userId_).child('name').remove();\n\n        this.place_.removeChild(this.userList_);\n    };\n\n    FirepadUserList.prototype.makeUserList_ = function() {\n        return elt('div', [\n            this.makeHeading_(),\n            elt('div', [\n                this.makeUserEntryForSelf_(),\n                this.makeUserEntriesForOthers_()\n            ], { 'class': 'firepad-userlist-users' })\n        ], { 'class': 'firepad-userlist' });\n    };\n\n    FirepadUserList.prototype.makeHeading_ = function() {\n        var counterSpan = elt('span', '0');\n        this.firebaseOn_(this.ref_, 'value', function(usersSnapshot) {\n            setTextContent(counterSpan, \"\" + usersSnapshot.numChildren());\n        });\n\n        return elt('div', [\n            elt('span', 'ONLINE ('),\n            counterSpan,\n            elt('span', ')')\n        ], { 'class': 'firepad-userlist-heading' });\n    };\n\n    FirepadUserList.prototype.makeUserEntryForSelf_ = function() {\n        var myUserRef = this.ref_.child(this.userId_);\n\n        var colorDiv = elt('div', null, { 'class': 'firepad-userlist-color-indicator' });\n        this.firebaseOn_(myUserRef.child('color'), 'value', function(colorSnapshot) {\n            var color = colorSnapshot.val();\n            if (isValidColor(color)) {\n                colorDiv.style.backgroundColor = color;\n            }\n        });\n\n        var nameInput = elt('input', null, { type: 'text', 'class': 'firepad-userlist-name-input' });\n        nameInput.value = this.displayName_;\n\n        var nameHint = elt('div', 'ENTER YOUR NAME', { 'class': 'firepad-userlist-name-hint' });\n        if (this.hasName_) nameHint.style.display = 'none';\n\n        // Update Firebase when name changes.\n        var self = this;\n        on(nameInput, 'change', function(e) {\n            var name = nameInput.value || \"Guest \" + Math.floor(Math.random() * 1000);\n            myUserRef.child('name').onDisconnect().remove();\n            myUserRef.child('name').set(name);\n            nameHint.style.display = 'none';\n            nameInput.blur();\n            self.displayName_ = name;\n            stopEvent(e);\n        });\n\n        var nameDiv = elt('div', [nameInput, nameHint]);\n\n        return elt('div', [colorDiv, nameDiv], {\n            'class': 'firepad-userlist-user ' + 'firepad-user-' + this.userId_\n        });\n    };\n\n    FirepadUserList.prototype.makeUserEntriesForOthers_ = function() {\n        var self = this;\n        var userList = elt('div');\n        var userId2Element = {};\n\n        function updateChild(userSnapshot, prevChildName) {\n            var userId = userSnapshot.key;\n            var div = userId2Element[userId];\n            if (div) {\n                userList.removeChild(div);\n                delete userId2Element[userId];\n            }\n            var name = userSnapshot.child('name').val();\n            if (typeof name !== 'string') { name = 'Guest'; }\n            name = name.substring(0, 20);\n\n            var color = userSnapshot.child('color').val();\n            if (!isValidColor(color)) {\n                color = \"#ffb\"\n            }\n\n            var colorDiv = elt('div', null, { 'class': 'firepad-userlist-color-indicator' });\n            colorDiv.style.backgroundColor = color;\n\n            var nameDiv = elt('div', name || 'Guest', { 'class': 'firepad-userlist-name' });\n\n            var userDiv = elt('div', [colorDiv, nameDiv], {\n                'class': 'firepad-userlist-user ' + 'firepad-user-' + userId\n            });\n            userId2Element[userId] = userDiv;\n\n            if (userId === self.userId_) {\n                // HACK: We go ahead and insert ourself in the DOM, so we can easily order other users against it.\n                // But don't show it.\n                userDiv.style.display = 'none';\n            }\n\n            var nextElement = prevChildName ? userId2Element[prevChildName].nextSibling : userList.firstChild;\n            userList.insertBefore(userDiv, nextElement);\n        }\n\n        this.firebaseOn_(this.ref_, 'child_added', updateChild);\n        this.firebaseOn_(this.ref_, 'child_changed', updateChild);\n        this.firebaseOn_(this.ref_, 'child_moved', updateChild);\n        this.firebaseOn_(this.ref_, 'child_removed', function(removedSnapshot) {\n            var userId = removedSnapshot.key;\n            var div = userId2Element[userId];\n            if (div) {\n                userList.removeChild(div);\n                delete userId2Element[userId];\n            }\n        });\n\n        return userList;\n    };\n\n    FirepadUserList.prototype.firebaseOn_ = function(ref, eventType, callback, context) {\n        this.firebaseCallbacks_.push({ ref: ref, eventType: eventType, callback: callback, context: context });\n        ref.on(eventType, callback, context);\n        return callback;\n    };\n\n    FirepadUserList.prototype.firebaseOff_ = function(ref, eventType, callback, context) {\n        var this$1 = this;\n\n        ref.off(eventType, callback, context);\n        for (var i = 0; i < this.firebaseCallbacks_.length; i++) {\n            var l = this$1.firebaseCallbacks_[i];\n            if (l.ref === ref && l.eventType === eventType && l.callback === callback && l.context === context) {\n                this$1.firebaseCallbacks_.splice(i, 1);\n                break;\n            }\n        }\n    };\n\n    FirepadUserList.prototype.removeFirebaseCallbacks_ = function() {\n        var this$1 = this;\n\n        for (var i = 0; i < this.firebaseCallbacks_.length; i++) {\n            var l = this$1.firebaseCallbacks_[i];\n            l.ref.off(l.eventType, l.callback, l.context);\n        }\n        this.firebaseCallbacks_ = [];\n    };\n\n    /** Assorted helpers */\n\n    function isValidColor(color) {\n        return typeof color === 'string' &&\n            (color.match(/^#[a-fA-F0-9]{3,6}$/) || color == 'transparent');\n    }\n\n\n    /** DOM helpers */\n    function elt(tag, content, attrs) {\n        var e = document.createElement(tag);\n        if (typeof content === \"string\") {\n            setTextContent(e, content);\n        } else if (content) {\n            for (var i = 0; i < content.length; ++i) { e.appendChild(content[i]); }\n        }\n        for (var attr in (attrs || {})) {\n            e.setAttribute(attr, attrs[attr]);\n        }\n        return e;\n    }\n\n    function setTextContent(e, str) {\n        e.innerHTML = \"\";\n        e.appendChild(document.createTextNode(str));\n    }\n\n    function on(emitter, type, f) {\n        if (emitter.addEventListener) {\n            emitter.addEventListener(type, f, false);\n        } else if (emitter.attachEvent) {\n            emitter.attachEvent(\"on\" + type, f);\n        }\n    }\n\n    function off(emitter, type, f) {\n        if (emitter.removeEventListener) {\n            emitter.removeEventListener(type, f, false);\n        } else if (emitter.detachEvent) {\n            emitter.detachEvent(\"on\" + type, f);\n        }\n    }\n\n    function preventDefault(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    }\n\n    function stopPropagation(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n        } else {\n            e.cancelBubble = true;\n        }\n    }\n\n    function stopEvent(e) {\n        preventDefault(e);\n        stopPropagation(e);\n    }\n\n    return FirepadUserList;\n})();//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }
/******/ ]);