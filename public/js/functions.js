/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

eval("var FirepadUserList = (function() {\r\n    function FirepadUserList(ref, place, userId, displayName) {\r\n        if (!(this instanceof FirepadUserList)) {\r\n            return new FirepadUserList(ref, place, userId, displayName);\r\n        }\r\n\r\n        this.ref_ = ref;\r\n        this.userId_ = userId;\r\n        this.place_ = place;\r\n        this.firebaseCallbacks_ = [];\r\n\r\n        var self = this;\r\n        this.hasName_ = !!displayName;\r\n        this.displayName_ = displayName || 'Guest ' + Math.floor(Math.random() * 1000);\r\n        this.firebaseOn_(ref.root.child('.info/connected'), 'value', function(s) {\r\n            if (s.val() === true && self.displayName_) {\r\n                var nameRef = ref.child(self.userId_).child('name');\r\n                nameRef.onDisconnect().remove();\r\n                nameRef.set(self.displayName_);\r\n            }\r\n        });\r\n\r\n        this.userList_ = this.makeUserList_()\r\n        place.appendChild(this.userList_);\r\n    }\r\n\r\n    // This is the primary \"constructor\" for symmetry with Firepad.\r\n    FirepadUserList.fromDiv = FirepadUserList;\r\n\r\n    FirepadUserList.prototype.dispose = function() {\r\n        this.removeFirebaseCallbacks_();\r\n        this.ref_.child(this.userId_).child('name').remove();\r\n\r\n        this.place_.removeChild(this.userList_);\r\n    };\r\n\r\n    FirepadUserList.prototype.makeUserList_ = function() {\r\n        return elt('div', [\r\n            this.makeHeading_(),\r\n            elt('div', [\r\n                this.makeUserEntryForSelf_(),\r\n                this.makeUserEntriesForOthers_()\r\n            ], { 'class': 'firepad-userlist-users' })\r\n        ], { 'class': 'firepad-userlist' });\r\n    };\r\n\r\n    FirepadUserList.prototype.makeHeading_ = function() {\r\n        var counterSpan = elt('span', '0');\r\n        this.firebaseOn_(this.ref_, 'value', function(usersSnapshot) {\r\n            setTextContent(counterSpan, \"\" + usersSnapshot.numChildren());\r\n        });\r\n\r\n        return elt('div', [\r\n            elt('span', 'ONLINE ('),\r\n            counterSpan,\r\n            elt('span', ')')\r\n        ], { 'class': 'firepad-userlist-heading' });\r\n    };\r\n\r\n    FirepadUserList.prototype.makeUserEntryForSelf_ = function() {\r\n        var myUserRef = this.ref_.child(this.userId_);\r\n\r\n        var colorDiv = elt('div', null, { 'class': 'firepad-userlist-color-indicator' });\r\n        this.firebaseOn_(myUserRef.child('color'), 'value', function(colorSnapshot) {\r\n            var color = colorSnapshot.val();\r\n            if (isValidColor(color)) {\r\n                colorDiv.style.backgroundColor = color;\r\n            }\r\n        });\r\n\r\n        var nameInput = elt('input', null, { type: 'text', 'class': 'firepad-userlist-name-input' });\r\n        nameInput.value = this.displayName_;\r\n\r\n        var nameHint = elt('div', 'ENTER YOUR NAME', { 'class': 'firepad-userlist-name-hint' });\r\n        if (this.hasName_) nameHint.style.display = 'none';\r\n\r\n        // Update Firebase when name changes.\r\n        var self = this;\r\n        on(nameInput, 'change', function(e) {\r\n            var name = nameInput.value || \"Guest \" + Math.floor(Math.random() * 1000);\r\n            myUserRef.child('name').onDisconnect().remove();\r\n            myUserRef.child('name').set(name);\r\n            nameHint.style.display = 'none';\r\n            nameInput.blur();\r\n            self.displayName_ = name;\r\n            stopEvent(e);\r\n        });\r\n\r\n        var nameDiv = elt('div', [nameInput, nameHint]);\r\n\r\n        return elt('div', [colorDiv, nameDiv], {\r\n            'class': 'firepad-userlist-user ' + 'firepad-user-' + this.userId_\r\n        });\r\n    };\r\n\r\n    FirepadUserList.prototype.makeUserEntriesForOthers_ = function() {\r\n        var self = this;\r\n        var userList = elt('div');\r\n        var userId2Element = {};\r\n\r\n        function updateChild(userSnapshot, prevChildName) {\r\n            var userId = userSnapshot.key;\r\n            var div = userId2Element[userId];\r\n            if (div) {\r\n                userList.removeChild(div);\r\n                delete userId2Element[userId];\r\n            }\r\n            var name = userSnapshot.child('name').val();\r\n            if (typeof name !== 'string') { name = 'Guest'; }\r\n            name = name.substring(0, 20);\r\n\r\n            var color = userSnapshot.child('color').val();\r\n            if (!isValidColor(color)) {\r\n                color = \"#ffb\"\r\n            }\r\n\r\n            var colorDiv = elt('div', null, { 'class': 'firepad-userlist-color-indicator' });\r\n            colorDiv.style.backgroundColor = color;\r\n\r\n            var nameDiv = elt('div', name || 'Guest', { 'class': 'firepad-userlist-name' });\r\n\r\n            var userDiv = elt('div', [colorDiv, nameDiv], {\r\n                'class': 'firepad-userlist-user ' + 'firepad-user-' + userId\r\n            });\r\n            userId2Element[userId] = userDiv;\r\n\r\n            if (userId === self.userId_) {\r\n                // HACK: We go ahead and insert ourself in the DOM, so we can easily order other users against it.\r\n                // But don't show it.\r\n                userDiv.style.display = 'none';\r\n            }\r\n\r\n            var nextElement = prevChildName ? userId2Element[prevChildName].nextSibling : userList.firstChild;\r\n            userList.insertBefore(userDiv, nextElement);\r\n        }\r\n\r\n        this.firebaseOn_(this.ref_, 'child_added', updateChild);\r\n        this.firebaseOn_(this.ref_, 'child_changed', updateChild);\r\n        this.firebaseOn_(this.ref_, 'child_moved', updateChild);\r\n        this.firebaseOn_(this.ref_, 'child_removed', function(removedSnapshot) {\r\n            var userId = removedSnapshot.key;\r\n            var div = userId2Element[userId];\r\n            if (div) {\r\n                userList.removeChild(div);\r\n                delete userId2Element[userId];\r\n            }\r\n        });\r\n\r\n        return userList;\r\n    };\r\n\r\n    FirepadUserList.prototype.firebaseOn_ = function(ref, eventType, callback, context) {\r\n        this.firebaseCallbacks_.push({ ref: ref, eventType: eventType, callback: callback, context: context });\r\n        ref.on(eventType, callback, context);\r\n        return callback;\r\n    };\r\n\r\n    FirepadUserList.prototype.firebaseOff_ = function(ref, eventType, callback, context) {\n        var this$1 = this;\n\r\n        ref.off(eventType, callback, context);\r\n        for (var i = 0; i < this.firebaseCallbacks_.length; i++) {\r\n            var l = this$1.firebaseCallbacks_[i];\r\n            if (l.ref === ref && l.eventType === eventType && l.callback === callback && l.context === context) {\r\n                this$1.firebaseCallbacks_.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    FirepadUserList.prototype.removeFirebaseCallbacks_ = function() {\n        var this$1 = this;\n\r\n        for (var i = 0; i < this.firebaseCallbacks_.length; i++) {\r\n            var l = this$1.firebaseCallbacks_[i];\r\n            l.ref.off(l.eventType, l.callback, l.context);\r\n        }\r\n        this.firebaseCallbacks_ = [];\r\n    };\r\n\r\n    /** Assorted helpers */\r\n\r\n    function isValidColor(color) {\r\n        return typeof color === 'string' &&\r\n            (color.match(/^#[a-fA-F0-9]{3,6}$/) || color == 'transparent');\r\n    }\r\n\r\n\r\n    /** DOM helpers */\r\n    function elt(tag, content, attrs) {\r\n        var e = document.createElement(tag);\r\n        if (typeof content === \"string\") {\r\n            setTextContent(e, content);\r\n        } else if (content) {\r\n            for (var i = 0; i < content.length; ++i) { e.appendChild(content[i]); }\r\n        }\r\n        for (var attr in (attrs || {})) {\r\n            e.setAttribute(attr, attrs[attr]);\r\n        }\r\n        return e;\r\n    }\r\n\r\n    function setTextContent(e, str) {\r\n        e.innerHTML = \"\";\r\n        e.appendChild(document.createTextNode(str));\r\n    }\r\n\r\n    function on(emitter, type, f) {\r\n        if (emitter.addEventListener) {\r\n            emitter.addEventListener(type, f, false);\r\n        } else if (emitter.attachEvent) {\r\n            emitter.attachEvent(\"on\" + type, f);\r\n        }\r\n    }\r\n\r\n    function off(emitter, type, f) {\r\n        if (emitter.removeEventListener) {\r\n            emitter.removeEventListener(type, f, false);\r\n        } else if (emitter.detachEvent) {\r\n            emitter.detachEvent(\"on\" + type, f);\r\n        }\r\n    }\r\n\r\n    function preventDefault(e) {\r\n        if (e.preventDefault) {\r\n            e.preventDefault();\r\n        } else {\r\n            e.returnValue = false;\r\n        }\r\n    }\r\n\r\n    function stopPropagation(e) {\r\n        if (e.stopPropagation) {\r\n            e.stopPropagation();\r\n        } else {\r\n            e.cancelBubble = true;\r\n        }\r\n    }\r\n\r\n    function stopEvent(e) {\r\n        preventDefault(e);\r\n        stopPropagation(e);\r\n    }\r\n\r\n    return FirepadUserList;\r\n})();//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }
/******/ ]);